-- generated by ChatGPT

-- 10 users
INSERT INTO users (name, email) VALUES
('Alice', 'alice@example.com'),
('Bob', 'bob@example.com'),
('Charlie', 'charlie@example.com'),
('Dave', 'dave@example.com'),
('Eve', 'eve@example.com'),
('Frank', 'frank@example.com'),
('Grace', 'grace@example.com'),
('Heidi', 'heidi@example.com'),
('Ivan', 'ivan@example.com'),
('Judy', 'judy@example.com');

-- categories (3 per user)
INSERT INTO categories (user_id, name)
SELECT u.id, c.name
FROM users u
JOIN (SELECT 'Work' AS name UNION SELECT 'Personal' UNION SELECT 'Ideas') c;

-- tasks (10 per user)
DELIMITER //
CREATE PROCEDURE seed_tasks()
BEGIN
  DECLARE u INT;
  DECLARE done INT DEFAULT 0;
  DECLARE cur CURSOR FOR SELECT id FROM users;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

  OPEN cur;
  read_loop: LOOP
    FETCH cur INTO u;
    IF done THEN
      LEAVE read_loop;
    END IF;

    SET @i = 1;
    WHILE @i <= 10 DO
      SET @cat = (SELECT id FROM categories WHERE user_id = u ORDER BY RAND() LIMIT 1);
      INSERT INTO tasks (user_id, category_id, title, content, is_done)
      VALUES (u, @cat,
              CONCAT('Task ', @i, ' for user ', u),
              CONCAT('This is task number ', @i, ' for user ', u),
              IF(RAND() > 0.7, TRUE, FALSE));
      SET @i = @i + 1;
    END WHILE;
  END LOOP;
  CLOSE cur;
END//
DELIMITER ;

CALL seed_tasks();
DROP PROCEDURE seed_tasks;
